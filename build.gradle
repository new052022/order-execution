plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.order.execution'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

def mapstructVersion = '1.4.2.Final'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'commons-codec:commons-codec:1.17.0'
	annotationProcessor ('org.projectlombok:lombok',
			"org.mapstruct:mapstruct-processor:${mapstructVersion}",
			'org.projectlombok:lombok-mapstruct-binding:0.2.0')
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testAnnotationProcessor 'org.projectlombok:lombok'
	compileOnly "org.mapstruct:mapstruct:${mapstructVersion}"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

compileJava {
	options.compilerArgs += ['-Amapstruct.defaultComponentModel=spring',
							 '-Amapstruct.suppressGeneratorVersionInfoComment=true',
							 '-Amapstruct.verbose=true']
}
